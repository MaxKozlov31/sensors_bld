name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: sensors_user
          POSTGRES_PASSWORD: user
          POSTGRES_DB: sensors_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run migrations
      run: |
        python manage.py migrate
      env:
        DJANGO_SETTINGS_MODULE: sensors.settings
        POSTGRES_USER: sensors_user
        POSTGRES_PASSWORD: user
        POSTGRES_DB: sensors_db
        DJANGO_DATABASE_HOST: localhost
        DJANGO_DATABASE_PORT: 5432
        DJANGO_SECRET_KEY: "django-insecure-u+me2yynacfix!(@9j&ejr1owocu*l!(j5lk^)wu4s5@ed(^8a"
        
    - name: Run tests
      run: |
        python -m pytest sensors/app/tests/ -v --cov=.
      env:
        DJANGO_SETTINGS_MODULE: sensors.settings
        POSTGRES_USER: sensors_user
        POSTGRES_PASSWORD: user
        POSTGRES_DB: sensors_db
        DJANGO_DATABASE_HOST: localhost
        DJANGO_DATABASE_PORT: 5432
        DJANGO_SECRET_KEY: "django-insecure-u+me2yynacfix!(@9j&ejr1owocu*l!(j5lk^)wu4s5@ed(^8a"
        
    - name: Run linters
      run: |
        ruff check .
        ruff format --check .
        mypy .

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t sensors-api .
        
    - name: Test Docker image
      run: |
        docker run --rm \
          -e POSTGRES_USER=sensors_user \
          -e POSTGRES_PASSWORD=user \
          -e POSTGRES_DB=sensors_db \
          -e DJANGO_DATABASE_HOST=db \
          -e DJANGO_DATABASE_PORT=5432 \
          -e DJANGO_SECRET_KEY="django-insecure-u+me2yynacfix!(@9j&ejr1owocu*l!(j5lk^)wu4s5@ed(^8a" \
          sensors-api python manage.py check