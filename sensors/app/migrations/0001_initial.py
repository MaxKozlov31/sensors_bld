# Generated by Django 5.2 on 2025-10-07 10:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Sensor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
                ("sensor_type", models.IntegerField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("sensor_type__gte", 1), ("sensor_type__lte", 3)
                        ),
                        name="sensor_type_range",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("temperature", models.FloatField(blank=True, null=True)),
                ("humidity", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sensor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="app.sensor",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("temperature__gte", -200), ("temperature__lte", 200)
                        ),
                        name="temperature_range",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("humidity__gte", 0), ("humidity__lte", 100)
                        ),
                        name="humidity_range",
                    ),
                ],
            },
        ),
    ]
